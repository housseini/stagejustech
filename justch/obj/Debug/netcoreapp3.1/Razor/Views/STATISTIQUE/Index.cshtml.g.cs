#pragma checksum "E:\projet\projet\stage\code\justch\justch\Views\STATISTIQUE\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "45138009daf97a86f41d6080024bc82b07c28914"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_STATISTIQUE_Index), @"mvc.1.0.view", @"/Views/STATISTIQUE/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\projet\projet\stage\code\justch\justch\Views\_ViewImports.cshtml"
using justch;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\projet\projet\stage\code\justch\justch\Views\_ViewImports.cshtml"
using justch.Models.ENTITIES;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "E:\projet\projet\stage\code\justch\justch\Views\_ViewImports.cshtml"
using justch.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "E:\projet\projet\stage\code\justch\justch\Views\_ViewImports.cshtml"
using Core.Flash;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"45138009daf97a86f41d6080024bc82b07c28914", @"/Views/STATISTIQUE/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fa9bc2625cd12a3f4353ae6e86d829650faf496e", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_STATISTIQUE_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Chart.js/chart.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"
<div class=""continer-fluid "">
    <div class=""row m-5"">
        <div id=""tek"" class=""col-6"">
            <canvas id=""myChart""></canvas>
        </div>

        <div id=""tek1"" class=""col-6"">
            <canvas id=""myChart1""></canvas>
        </div>
    </div>

    <br/>
    <br/>
    <br/>

    <div class=""row m-5"">
        <div id=""tek2"" class=""col-6"">
            <canvas id=""myChart2""></canvas>
        </div>

        <div id=""tek3"" class=""col-6"">
            <canvas id=""myChart3""></canvas>
        </div>
    </div>
</div>



");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "45138009daf97a86f41d6080024bc82b07c289144524", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script>
$().ready(function() { 


            $(""#listemenu"").empty()
            var menu = '<li class=""menu-title"">Main</li>' +
        '  <li>' +
        '   <a  href = ""/DossierMedical/Index"" ><i class=""fa fa-folder""></i> <span>Dossiers</span></a > ' +
        '  </li>' +
        '     <li>' +
        '      <li   >' +
        '        <a  href=""/Patient/Index""><i class=""fa fa-user""></i> <span>Patients</span></a>' +
        '     </li>' +
        '     <li>' +
        '         <a href=""/Appointment/Index""><i class=""fa fa-calendar-check-o""></i> <span>Rendez-vous</span></a>' +
        '      </li>' +
        '     <li>' +
        '          <a href=""/Doctor/Index""><i class=""fa fa-user""></i> <span>Medecins</span></a>' +
        '      </li>' +
        '     <li   class=""active"">' +
        '          <a href=""/STATISTIQUE/Index""><i class=""fa fa-line-chart""></i> <span>Statistique</span></a>' +
        '      </li>' +
        '    <li>' +
        '       <a href=""#""  data-toggle=");
                WriteLiteral(@"""dropdown"" aria-expanded=""false""> <i class=""fa fa-cog""> <span> Parametre </span></i></a>' +
        '      <div class=""dropdown-menu "">' +
        '             <a class=""dropdown-item"" href=""/Room/Index""> Salles</a>' +
        '             <a class=""dropdown-item"" href=""/TechnienEnbrylogiste/Index"">Techniciens</a>' +
        '<a class=""dropdown-item"" href=""/DocumentType/Index"">Docment Type </a>' +
        '           <a class=""dropdown-item"" href=""/MedicalAct/Index"">ACTES MEDICALS</a> ' +
        '           <a class=""dropdown-item"" href=""/TraitementCycle/Index"">TraitementCycle</a> ' +
        '           <a class=""dropdown-item"" href=""/Incubateur_Chambre/Index"">Incubateur/Chambre</a> ' +
        '            <a class=""dropdown-item"" href=""/Cuve/Index"">Cuve</a> ' +

        '           <a class=""dropdown-item"" href=""/Utilisateur/Index"">Utilisateur</a> ' +
        '      <a class=""dropdown-item"" href=""/Database_Registre/Index"">Sauvegarde</a> ' +

        '           <a class=""dropdown-item"" href");
                WriteLiteral(@"=""/Automatisation/Index"">Classification</a> ' +
      
        '       </div> ' +
        '   </li>    ';

    $(""#listemenu"").append(menu)
        Genre = []
        $.get(""/STATISTIQUE/CountGenre"", function(re) {
            Genre.push(re.Femme)
            Genre.push(re.Homme)



        })





        const ctx = document.getElementById('myChart').getContext('2d');
        const myChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: ['Femme', 'Homme'],
                datasets: [{
                    label: '# of Votes',
                    data: Genre,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
               ");
                WriteLiteral(@"     borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                plugins: {
                    title: {
                        display: true,
                        text: 'REPARTION  DES  PATIENTS PAR SEXE '
                    }
                }
            }


        });

        const ctx2 = document.getElementById('myChart2').getContext('2d');
        const myChart2 = new Chart(ctx2, {
            type: 'bar',
            data: {
                labels: ['EN COURS ', 'TERMINER ', 'SUSPENDUE ', 'ANNULER'],
                datasets: [{
                    label: '# of Votes',
                    data");
                WriteLiteral(@": [1, 2, 3, 4],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                plugins: {
                    title: {
                        display: true,
                        text: 'REPARTION  DES RENDEZ-VOUS SELON ETAT '
     ");
                WriteLiteral(@"               }
                }
            }


        });

        Genre1 = []
        $.get(""/STATISTIQUE/COUNTdossierType"", function(re) {



            Genre1.push(re.Femme)
            Genre1.push(re.Homme)
            Genre1.push(re.Couple)



        })

        const ctx1 = document.getElementById('myChart1').getContext('2d');
        const myChart1 = new Chart(ctx1, {
            type: 'pie',
            data: {
                labels: ['Femme', 'Homme', 'COUPLE'],
                datasets: [{
                    label: '# of Votes',
                    data: Genre1,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor:");
                WriteLiteral(@" [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                plugins: {
                    title: {
                        display: true,
                        text: 'REPARTION  DES DOSSIERS SELON LE TYPE  '
                    }
                }
            }


        });


        Genre2 = []
        $.get(""/STATISTIQUE/COUNTMEDICALRECOREType"", function(re) {

            for (let v in re) {
                Genre2.push(re[v])
            }
        })
        console.log(Genre2)

        const ctx3 = document.getElementById('myChart3').getContext('2d');
        const myChart3 = new Chart(ctx3, {
            ");
                WriteLiteral(@"type: 'pie',
            data: {
                labels: ['EXPLORATION ', 'Cycle de Traitement '],
                datasets: [{
                    label: '# of Votes',
                    data: Genre2,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
       ");
                WriteLiteral(@"     options: {
                plugins: {
                    title: {
                        display: true,
                        text: 'REPARTION  DES DOSSIERS SELON LE TYPE  '
                    }
                }
            }


        });

        $(""#tek,#tek1,#tek3"").css({ ""width"": ""400"", ""height"": ""400"" })
        $(""#tek2"").css({ ""width"": ""400"", ""height"": ""400"" })

        })

    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
